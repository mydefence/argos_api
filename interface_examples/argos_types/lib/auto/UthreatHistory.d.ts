/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
/**
 * The type of the system component sending the threat.
 */
export type DetectionType = "RF" | "Radar" | "Drone ID" | "Demodulated" | "Audio" | "Vision";
/**
 * Information about the frequency of an effector/detector.
 */
export type FrequencyBand = "433" | "900" | "1G2" | "2G4" | "5G2" | "5G8" | "GNSS";
export type UthreatHistory = {
    /**
     * List of uthreat summaries for the given time interval.
     */
    history: {
        /**
         * The unique ID of the uthreat.
         */
        uthreatId: string;
        /**
         * The threat category.
         */
        category: string;
        /**
         * Information about the threat. E.g. the manufacturer of the drone causing the threat.
         */
        description: string;
        /**
         * Has the uthreat been muted in the given time interval.
         */
        muted: boolean;
        /**
         * Was any uthreat confidence above the UthreatConfig.droneConfidenceThreshold at the time of detection.
         */
        aboveConfidenceThreshold: boolean;
        /**
         * List of the detection types related to this uthreat for the given time interval.
         */
        detectionType: DetectionType[];
        /**
         * List of frequency bands related to this uthreat for the given time interval.
         */
        frequencyBands: FrequencyBand[];
        createdTimeStamp: string;
        stoppedTimeStamp?: string;
    }[];
    /**
     * True if the request result has been limited. If true more data for the given time interval exists. Use narrower time interval to avoid this.
     */
    limited: boolean;
    timeInterval: TimeInterval;
};
/**
 * Time interval for the returned data set. If 'limited' is true this time interval is narrower than the requested time interval.
 */
export type TimeInterval = {
    fromTimestamp: string;
    toTimestamp: string;
};
