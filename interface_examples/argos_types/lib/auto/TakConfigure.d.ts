/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */
export type TakConfigure = {
    /**
     * Callsign used CoT messages.
     */
    callsign: string;
    /**
     * When this is set, use the location of the specified device to broadcast Argos' location (using CoT event type a-f-G-U-C). The device should probably have useGpsLocation enabled. If not set Argos location will not be broadcast. Primarily relevant with vehicle systems.
     */
    locationDeviceId?: string;
    transports: ({
        type: "multicast";
        /**
         * Name of transport
         */
        name?: string;
        /**
         * IP address of the Argos server
         */
        localIpAddress: string;
        /**
         * Multicast IP address
         */
        multicastIpAddress?: string;
        /**
         * Multicast port number
         */
        port?: number;
        options?: TakTransportOptionsConfigure;
    } | {
        type: "tcp";
        /**
         * Name of transport
         */
        name?: string;
        /**
         * TAK server IP address
         */
        address: string;
        /**
         * TAK server TCP port
         */
        port?: number;
        options?: TakTransportOptionsConfigure;
    } | {
        type: "tls";
        /**
         * Name of transport
         */
        name?: string;
        /**
         * TAK server IP address
         */
        address: string;
        /**
         * TAK server TLS port
         */
        port?: number;
        credentials: {
            /**
             * Credential ID. Use when modifying an existing transport. Credentials can't be modified
             */
            credentialId: string;
        } | {
            /**
             * Certificate corresponding to private key in PEM format
             */
            cert: string;
            /**
             * Private key in PEM format
             */
            key: string;
            /**
             * CA certificate in PEM format
             */
            ca?: string;
        } | {
            /**
             * PKCS12 file containing private key and corresponding certificate(s)
             */
            p12: string;
            /**
             * Passphrase for the PKCS12 file
             */
            passphrase: string;
        };
        /**
         * Verify server certificate
         */
        verifyServer?: boolean;
        options?: TakTransportOptionsConfigure;
    } | {
        type: "tcpServer";
        /**
         * Name of transport
         */
        name?: string;
        /**
         * TAK server TCP port
         */
        port?: number;
        options?: TakTransportOptionsConfigure;
    })[];
};
export type TakTransportOptionsConfigure = {
    /**
     * Direction of CoT messages. `off` can be used to temporarily disable the transport.
     */
    direction?: "input" | "output" | "both" | "off";
    /**
     * Filter uthreats on confidence before output
     */
    threshold?: number;
};
